unit u_detail_inscription;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, ExtCtrls,
  StdCtrls;

type

  { Tf_detail_inscription }

  Tf_detail_inscription = class(TForm)
    btn_valider: TButton;
    btn_annuler: TButton;
    btn_retour: TButton;
    cb_civilite: TComboBox;
    cb_filiere: TComboBox;
    edt_mel: TEdit;
    edt_portable: TEdit;
    edt_telephone: TEdit;
    edt_adresse: TEdit;
    edt_cp: TEdit;
    edt_commune: TEdit;
    edt_prenom: TEdit;
    edt_nom: TEdit;
    edt_num: TEdit;
    lbl_releve: TLabel;
    lbl_filiere_erreur: TLabel;
    lbl_filiere_long: TLabel;
    lbl_filiere_court: TLabel;
    lbl_filiere: TLabel;
    lbl_mel_erreur: TLabel;
    lbl_telephone_portable_erreur: TLabel;
    lbl_mel: TLabel;
    lbl_portable: TLabel;
    lbl_telephone: TLabel;
    lbl_contact: TLabel;
    lbl_commune_erreur: TLabel;
    lbl_cp_erreur: TLabel;
    lbl_adresse_erreur: TLabel;
    lbl_adresse: TLabel;
    lbl_prenom_erreur: TLabel;
    lbl_nom_erreur: TLabel;
    lbl_num_erreur: TLabel;
    lbl_prenom: TLabel;
    lbl_nom: TLabel;
    lbl_num: TLabel;
    lbl_ident: TLabel;
    pnl_releve_list: TPanel;
    pnl_releve_titre: TPanel;
    pnl_releve: TPanel;
    pnl_filiere: TPanel;
    pnl_contact: TPanel;
    pnl_adresse: TPanel;
    pnl_ident: TPanel;
    pnl_detail: TPanel;
    pnl_btn: TPanel;
    pnl_titre: TPanel;
    procedure btn_annulerClick(Sender: TObject);
    procedure btn_retourClick(Sender: TObject);
    procedure edt_adresseExit(Sender: TObject);
    procedure edt_communeExit(Sender: TObject);
    procedure edt_cpExit(Sender: TObject);
    procedure edt_melExit(Sender: TObject);
    procedure edt_nomExit(Sender: TObject);
    procedure edt_numEnter(Sender: TObject);
    procedure edt_numExit(Sender: TObject);
    procedure edt_portableExit(Sender: TObject);
    procedure edt_prenomExit(Sender: TObject);
    procedure edt_telephoneExit(Sender: TObject);
    procedure lbl_identClick(Sender: TObject);
    procedure pnl_titreClick(Sender: TObject);
    procedure init ( idinf : string; affi : boolean);
    procedure detail ( idinf : string);
    procedure edit ( idinf : string);
    procedure add;
    procedure delete ( idinf : string);
    procedure edt_Enter (Sender : TObject );

  private
     procedure affi_page;
     function affi_erreur_saisie (erreur : string; lbl : TLabel; edt : TEdit) : boolean;
  public
    { public declarations }
  end;

var
  f_detail_inscription: Tf_detail_inscription;

implementation

{$R *.lfm}

uses u_feuille_style, u_list_inscription, u_releve_list;

{ Tf_detail_inscription }

Var oldvaleur : string; // utilisée dans la modification pour comparer l’ancienne valeur avec la saisie
id : string; // variable active dans toute l'unité, contenant l'id infraction affichée
procedure Tf_detail_inscription.Init ( idinf : string; affi : boolean);
// ajout nouvelle inscription : id est vide
// affichage détail d'une inscription : affi est vrai sinon affi est faux
begin
style.panel_travail (pnl_titre);
style.panel_travail (pnl_btn);
style.panel_travail (pnl_detail);

style.panel_travail (pnl_ident);
style.label_titre (lbl_ident);
style.label_erreur (lbl_num_erreur); lbl_num_erreur.caption := '' ;
style.label_erreur (lbl_nom_erreur); lbl_nom_erreur.caption := '' ;
style.label_erreur (lbl_prenom_erreur); lbl_prenom_erreur.caption := '' ;

style.panel_travail (pnl_adresse);
style.label_titre (lbl_adresse);
style.label_erreur (lbl_adresse_erreur); lbl_adresse_erreur.caption := '' ;
style.label_erreur (lbl_cp_erreur); lbl_cp_erreur.caption := '' ;
style.label_erreur (lbl_commune_erreur); lbl_commune_erreur.caption := '' ;

style.panel_travail (pnl_contact);
style.label_titre (lbl_contact);
style.label_erreur (lbl_telephone_portable_erreur); lbl_telephone_portable_erreur.caption := '' ;
style.label_erreur (lbl_mel_erreur); lbl_mel_erreur.caption := '' ;

style.panel_travail (pnl_filiere);
style.label_titre (lbl_filiere);
style.label_erreur (lbl_filiere_erreur); lbl_filiere_erreur.caption := '' ;

style.panel_travail (pnl_releve);
style.panel_travail (pnl_releve_titre);
style.label_titre (lbl_releve);
style.panel_travail (pnl_releve_list);
// initialisation identification
lbl_num_erreur.caption :='';
edt_num.clear;
edt_num.ReadOnly :=affi;
edt_nom.clear;
edt_nom.ReadOnly :=affi;
edt_prenom.clear;
edt_prenom.ReadOnly :=affi;
// initialisation adresse
lbl_adresse_erreur.caption :='';
lbl_cp_erreur.caption :='';
lbl_commune_erreur.caption :='';
edt_adresse.clear;
edt_adresse.ReadOnly :=affi;
edt_cp.clear;
edt_cp.ReadOnly :=affi;
edt_commune.clear;
edt_commune.ReadOnly :=affi;
// initialisation contact
lbl_telephone_portable_erreur.caption :='';
lbl_mel_erreur.caption :='';
edt_telephone.clear;
edt_telephone.ReadOnly :=affi;
edt_portable.clear;
edt_portable.ReadOnly :=affi;
edt_mel.clear;
edt_mel.ReadOnly :=affi;
// initialisation filiere
lbl_filiere_erreur.caption :='';
btn_retour.visible :=affi; // visible quand affichage filière
btn_valider.visible :=NOT affi; // visible quand ajout/modification inscription
btn_annuler.visible :=NOT affi; // visible quand ajout/modification inscription
// initialisation relevé
f_releve_list.borderstyle := bsNone;
 f_releve_list.parent := pnl_releve_list;
 f_releve_list.align := alClient;
 f_releve_list.init(affi);
 f_releve_list.show;
show;
id := idinf;
IF NOT ( id = '') // affichage/modification inscription
THEN affi_page;
end;

procedure Tf_detail_inscription.affi_page;
begin
// affichage des données de la base, complété par la suite
end;
procedure Tf_detail_inscription.detail (idinf : string);
begin
init (idinf, true); // mode affichage
pnl_titre.caption := 'Détail d''un inscrit';
btn_retour.setFocus;
end;
procedure Tf_detail_inscription.edit (idinf : string);
begin
init (idinf, false);
pnl_titre.caption := 'Modification d''un inscrit';
edt_num.ReadOnly := true;
end;
procedure Tf_detail_inscription.add;
begin
init ('',false); // pas de numéro d'infraction
pnl_titre.caption := 'Nouvelle inscription';
edt_num.setFocus;
end;
procedure Tf_detail_inscription.delete (idinf : string);
begin
IF messagedlg ('Demande de confirmation'
,'Confirmez-vous la suppression de l''inscrit n°' +idinf
,mtConfirmation, [mbYes,mbNo], 0, mbNo) = mrYes
THEN BEGIN
// suppression dans la base, complété par la suite
f_list_inscription.line_delete;
END;
end;
function Tf_detail_inscription.affi_erreur_saisie (erreur : string; lbl : TLabel; edt : TEdit) : boolean;
begin
 lbl.caption := erreur;
 if NOT (erreur = '')
 then begin
 edt.setFocus;
 result := false;
 end
 else result := true;
end;


procedure Tf_detail_inscription.pnl_titreClick(Sender: TObject);
begin

end;

procedure Tf_detail_inscription.btn_retourClick(Sender: TObject);
begin
   close;
end;

procedure Tf_detail_inscription.edt_adresseExit(Sender: TObject);
begin
  edt_adresse.text := TRIM(edt_adresse.text);

end;

procedure Tf_detail_inscription.edt_communeExit(Sender: TObject);
begin
  edt_commune.text := TRIM(edt_commune.text);

end;

procedure Tf_detail_inscription.edt_cpExit(Sender: TObject);
begin
  edt_cp.text := TRIM(edt_cp.text);

end;

procedure Tf_detail_inscription.edt_melExit(Sender: TObject);
begin
  edt_mel.text := TRIM(edt_mel.text);

end;

procedure Tf_detail_inscription.edt_nomExit(Sender: TObject);
begin
  edt_nom.text := TRIM(edt_nom.text);

end;

procedure Tf_detail_inscription.edt_numEnter(Sender: TObject);
begin

end;

procedure Tf_detail_inscription.edt_numExit(Sender: TObject);
begin
  edt_num.text := TRIM(edt_num.text);
end;

procedure Tf_detail_inscription.edt_portableExit(Sender: TObject);
begin
  edt_portable.text := TRIM(edt_portable.text);

end;

procedure Tf_detail_inscription.edt_prenomExit(Sender: TObject);
begin
  edt_prenom.text := TRIM(edt_prenom.text);

end;

procedure Tf_detail_inscription.edt_telephoneExit(Sender: TObject);
begin
  edt_telephone.text := TRIM(edt_telephone.text);

end;

procedure Tf_detail_inscription.lbl_identClick(Sender: TObject);
begin

end;

procedure Tf_detail_inscription.btn_annulerClick(Sender: TObject);
begin
  close;
end;
procedure Tf_detail_inscription.edt_Enter(Sender :
TObject);
begin
oldvaleur := TEdit(Sender).text;
end;


end.

